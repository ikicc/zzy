//menu2_6.cpp
#include <stdio.h>
#include <iostream>
void m2_6_1(void) {   

	system("cls");  
	printf("\n\n  一维数组 \n\n  ");
	printf("一维数组的使用：\n");
	printf("一维数组的使用包括：数组的定义、数组的初始化、数组的引用、数组的赋值、数组的输出。\n");
	printf("数组的定义：\n");
	printf("类型说明符 数组名[常量表达式];\n");
	printf("例如：int a[10];\n");
	printf("数组的初始化：\n");
	printf("类型说明符 数组名[常量表达式]={常量表达式1，常量表达式2，……，常量表达式n};\n");
	printf("例如：int a[10]={1,2,3,4,5,6,7,8,9,10};\n");
	printf("数组的引用：\n");
	printf("数组的引用格式为：数组名[下标]。\n");
	printf("例如：a[0]、a[1]、a[2]、a[3]、a[4]、a[5]、a[6]、a[7]、a[8]、a[9]\n");
	printf("数组的赋值：\n");
	printf("数组的赋值格式为：数组名[下标]=表达式。\n");
	printf("例如：a[0]=1、a[1]=2、a[2]=3、a[3]=4、a[4]=5、a[5]=6、a[6]=7、a[7]=8、a[8]=9、a[9]=10\n");
	printf("数组的输出：\n");
	printf("数组的输出格式为：数组名[下标]。\n");
	printf("例如：a[0]、a[1]、a[2]、a[3]、a[4]、a[5]、a[6]、a[7]、a[8]、a[9]\n");
	printf("数组的引用和赋值都是通过下标来实现的。\n");


	getchar();
	rewind(stdin);
}

void m2_6_2(void) {

	system("cls");
	printf("\n\n  二维数组 \n\n  ");
	printf("二维数组的使用：\n");
	printf("二维数组的使用包括：二维数组的定义、二维数组的初始化、二维数组的引用、二维数组的赋值、二维数组的输出。\n");
	printf("二维数组的定义：\n");
	printf("类型说明符 数组名[常量表达式1][常量表达式2];\n");
	printf("例如：int a[3][4];\n");
	printf("二维数组的初始化：\n");
	printf("类型说明符 数组名[常量表达式1][常量表达式2]={常量表达式1，常量表达式2，……，常量表达式n};\n");
	printf("例如：int a[3][4]={1,2,3,4,5,6,7,8,9,10,11,12};\n");
	printf("二维数组的引用：\n");
	printf("二维数组的引用格式为：数组名[下标1][下标2]。\n");
	printf("例如：a[0][0]、a[0][1]、a[0][2]、a[0][3]、a[1][0]、a[1][1]、a[1][2]、a[1][3]、a[2][0]、a[2][1]、a[2][2]、a[2][3]\n");
	printf("二维数组的赋值：\n");
	printf("二维数组的赋值格式为：数组名[下标1][下标2]=表达式。\n");
	printf("例如：a[0][0]=1、a[0][1]=2、a[0][2]=3、a[0][3]=4、a[1][0]=5、a[1][1]=6、a[1][2]=7、a[1][3]=8、a[2][0]=9、a[2][1]=10、a[2][2]=11、a[2][3]=12\n");
	printf("二维数组的输出：\n");
	printf("二维数组的输出格式为：数组名[下标1][下标2]。\n");
	printf("例如：a[0][0]、a[0][1]、a[0][2]、a[0][3]、a[1][0]、a[1][1]、a[1][2]、a[1][3]、a[2][0]、a[2][1]、a[2][2]、a[2][3]\n");
	printf("二维数组的引用和赋值都是通过下标来实现的。\n");




	getchar();
	rewind(stdin);
}

void m2_6_3(void) {

	system("cls");
	printf("\n\n  字符数组 \n\n  ");
	printf("字符数组的使用：\n");
	printf("字符数组的使用包括：字符数组的定义、字符数组的初始化、字符数组的引用、字符数组的赋值、字符数组的输出。\n");
	printf("字符数组的定义：\n");
	printf("类型说明符 数组名[常量表达式];\n");
	printf("例如：char a[10];\n");
	printf("字符数组的初始化：\n");
	printf("类型说明符 数组名[常量表达式]={常量表达式1，常量表达式2，……，常量表达式n};\n");
	printf("例如：char a[10]={'a','b','c','d','e','f','g','h','i','j'};\n");
	printf("字符数组的引用：\n");
	printf("字符数组的引用格式为：数组名[下标]。\n");
	printf("例如：a[0]、a[1]、a[2]、a[3]、a[4]、a[5]、a[6]、a[7]、a[8]、a[9]\n");
	printf("字符数组的赋值：\n");
	printf("字符数组的赋值格式为：数组名[下标]=表达式。\n");
	printf("例如：a[0]='a'、a[1]='b'、a[2]='c'、a[3]='d'、a[4]='e'、a[5]='f'、a[6]='g'、a[7]='h'、a[8]='i'、a[9]='j'\n");
	printf("字符数组的输出：\n");
	printf("字符数组的输出格式为：数组名[下标]。\n");
	printf("例如：a[0]、a[1]、a[2]、a[3]、a[4]、a[5]、a[6]、a[7]、a[8]、a[9]\n");
	printf("字符数组的引用和赋值都是通过下标来实现的。\n");
	
	getchar();
	rewind(stdin);
}

void m2_6_4(void) {

	system("cls");
	printf("\n\n  数组作为函数的参数\n\n  ");
	printf("数组作为函数的参数：\n");
	printf("数组作为函数的参数包括：数组作为函数的形参、数组作为函数的实参。\n");
	printf("数组作为函数的形参：\n");
	printf("数组作为函数的形参格式为：类型说明符 数组名[常量表达式]。\n");
	printf("例如：int a[10]、int a[3][4]、char a[10]、char a[3][4]\n");
	printf("数组作为函数的实参：\n");
	printf("数组作为函数的实参格式为：数组名。\n");
	printf("例如：a、a、a、a\n");
	printf("数组作为函数的形参和实参都是通过数组名来实现的。\n");
	
	getchar();
	rewind(stdin);
}